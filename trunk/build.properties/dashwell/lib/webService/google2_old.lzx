<canvas debug="true" height="800" width="1000">
	
	<include href="ftgrid.lzx" />
	
    <debug x="280" width="470" height="370" />

    <dataset name="googleDset" />
    <dataset name="db_query_result"/>
    <soap name="google" wsdl="http://api.google.com/GoogleSearch.wsdl"
          secure="true" secureport="8443">

        <method event="onload">
            Debug.write('google soap service stub loaded');
        </method>

        <method event="onerror" args="error">
            Debug.write('error:', error);
        </method>

        <remotecall name="search" funcname="doGoogleSearch" 
                    dataobject="googleDset">

            <param value="'2TKUw4ZQFHJ84ByemZK0EXV0Lj+7xGOx'" />
            <param value="'Max'" />
            <param value="1" />
            <param value="10" />
            <param value="true" />
            <param value="''" />
            <param value="true" />
            <param value="''" />
            <param value="''" />
            <param value="''" />

            <method event="ondata" args="value">
            <![CDATA[    
                Debug.write('one:', value);
                
                
                //Debug.write('one:', value.);

					//debug.inspect(googleDset.childnodes)
					
					// create an XML node from a string
					var element = LzDataNode.stringToLzData(value);
					// append our new element to the dataset
					//dsPntr.p.appendChild(element);
					//Debug.write("dsPntr.p.data: ", dsPntr.p.data);
					//Debug.write("googleDset.data: ", googleDset.data);
					
					//Debug.inspect("googleDset.childnodes", googleDset.p.childnodes)
					
					Debug.inspect("element", element);
					
					var dsPntr = googleDset.getPointer();
					Debug.write("dsPntr: ", dsPntr);					
					/*if (dsPntr.p.hasChildNodes())
					{
						do {
							
							Debug.write(dsPntr.p.getFirstChild());
							dsPntr.p.removeChild(dsPntr.p.getFirstChild());
						} while (dsPntr.p.hasChildNodes());
					}*/
					
					var howDeep = 0;
					
					this.n = new LzDataElement('dataset', {name: 'db_query_result'});

					this.metadata = new LzDataElement('metadata');
					
//Yuwen changed					
db_query_result.appendChild(this.metadata);
            		
            		this.metadata.appendChild(new LzDataElement('column', {name:"column1", display:"First Column", editable:"false", resizable:"true"}));
            		this.metadata.appendChild(new LzDataElement('column', {name:"column2", display:"Second Column", editable:"false", resizable:"true"}));
            		this.metadata.appendChild(new LzDataElement('column', {name:"column3", display:"Third Column", editable:"false", resizable:"true"}));
            		this.metadata.appendChild(new LzDataElement('column', {name:"column4", display:"Fourth Column", editable:"false", resizable:"true"}));
            		
            		
            		
            		this.resultset = new LzDataElement('resultset');
//Yuwen changed            		
db_query_result.appendChild(this.resultset);
					
					var ok = dsPntr.selectChild();
					var nodename;
					var nodeText;
					var attributes;
					while (ok){
						nodename = dsPntr.getNodeName();
						Debug.write("nodename: ", nodename);
						nodeText = dsPntr.getNodeText();
						Debug.write("nodeText: ", nodeText);
						//attributes = dsPntr.getNodeAttributes();
						//Debug.write("attributes: ", attributes);
						if (nodename != "undefined" && nodeText != "undefined"){
							this.row = new LzDataElement('row');
							this.resultset.appendChild(this.row);
							if (nodeText == ""){
								this.column = new LzDataElement('column1', {value: nodename})
							}else{
								this.column = new LzDataElement('column1', {value: nodename + " : " + nodeText})
							}
							this.row.appendChild(this.column);
						}
						
						if (dsPntr.getNodeCount() >0 ){
							ok = dsPntr.selectChild();
						
							while (ok){
								nodename = dsPntr.getNodeName();
								Debug.write("child nodename: ", nodename);
								nodeText = dsPntr.getNodeText();
								Debug.write("child nodeText: ", nodeText);
								//attributes = dsPntr.getNodeAttributes();
								//Debug.write("child attributes: ", attributes);
								
								if (nodename != "undefined"  && nodeText != "undefined"){
									this.row = new LzDataElement('row');
									this.resultset.appendChild(this.row);
									this.column = new LzDataElement('column2', {value: nodename + " : " + nodeText})
									this.row.appendChild(this.column);	
								}
								if (dsPntr.getNodeCount() >0){
									ok = dsPntr.selectChild();
								
									while (ok){
										nodename = dsPntr.getNodeName();
										Debug.write("child child nodename: ", nodename);
										nodeText = dsPntr.getNodeText();
										Debug.write("child child nodeText: ", nodeText);
										//attributes = dsPntr.getNodeAttributes();
										//Debug.write("child child attributes: ", attributes);
										if (nodename != "undefined"  && nodeText != "undefined"){
											this.row = new LzDataElement('row');
											this.resultset.appendChild(this.row);
											this.column = new LzDataElement('column3', {value: nodename + " : " + nodeText})
											this.row.appendChild(this.column);
										}
										if (dsPntr.getNodeCount() >0){
											howDeep = 4;
										}								
										
										ok = dsPntr.selectNext();						
									}									
									ok = dsPntr.selectParent();																		
								}
								
								ok = dsPntr.selectNext();						
							}
							ok = dsPntr.selectParent();							
						}
						ok = dsPntr.selectNext();
					}
//Yuwen added					
gridview.completeInstantiation();
					
					Debug.write(this.n);
					Debug.write(this.metadata);
					Debug.write(this.resultset);
			]]>							                
            </method>
<!-- 					// get a pointer to the dataset
					var dsPntr = googleDset.getPointer();
					Debug.write("dsPntr: ", dsPntr);
					// remove the existing nodes if any
					
					/*if (dsPntr.p.hasChildNodes())
					{
						do {
							
							Debug.write("dsPntr.p.getFirstChild(): ", dsPntr.p.getFirstChild());
							dsPntr.p.
							dsPntr.p.removeChild(dsPntr.p.getFirstChild());
						} while (dsPntr.p.hasChildNodes());
					}*/
					

					//ok = dsPntr.p.selectParent(); -->
        </remotecall>
    </soap>

    <view layout="spacing: 5" >
        <button text="search" onclick="google.search.invoke()" />
        <view bgcolor="yellow"  >
            <simplelayout axis="y" spacing="10"/>
            <view id="gridview" layout="axis: y" initstage="defer">
			    <text text="Grid" />
			    <ftdynamicgrid datapath="db_query_result:/"
			                   contentdatapath="resultset/row"
			                   metadatapath="metadata/column"
			                   height="125" rowheight="20"
			                   id="myGrid">
			    </ftdynamicgrid> 
		    </view>           
        </view>
    </view>
<!-- * X_LZ_COPYRIGHT_BEGIN ***************************************************
* Copyright 2001-2004 Laszlo Systems, Inc.  All Rights Reserved.              *
* Use is subject to license terms.                                            *
* X_LZ_COPYRIGHT_END ****************************************************** -->
</canvas>

