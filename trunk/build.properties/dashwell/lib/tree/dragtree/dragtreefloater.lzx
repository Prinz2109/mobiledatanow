<library>
    <class name="dragtreefloater" datapath="" height="18"
           width="180">
        <!-- Reference to the dragtree that this floater is operating
             on -->
        <attribute name="_dragtreeref" value="null" />
        
        <!-- x-position of the floater when it started being dragged -->
        <attribute name="_initx" value="0" />

        <!-- y-position of the floater when it started being dragged -->
        <attribute name="_inity" value="0" />


        <animatorgroup name="returnToInit" process="simultaneous"
                       start="false">
            <animator attribute="x" to="${parent.parent._initx}"
                      duration="500" motion="easeout" />
            <animator attribute="y" to="${parent.parent._inity}"
                      duration="500" motion="easeout" />
        </animatorgroup>

        <dragstate name="dragger" />

        <method event="oninit">
            //LzTrack.register(this, parent.trackgroupname);
        </method>

        <method name="startDrag" args="draggedLeaf">
            var selectedLeaves = _dragtreeref.getSelection();
            this.datapath.setPointer(draggedLeaf.datapath.p);
            bringToFront();
            setVisible(true);
            setAttribute("_initx",draggedLeaf.getAttributeRelative("x", canvas)+draggedLeaf.leafindent+draggedLeaf.labelx);
            setAttribute("_inity",draggedLeaf.getAttributeRelative("y", canvas));
            setX(_initx);
            setY(_inity);
            if (selectedLeaves.length == 1) {
                // Single leaf dragging
                this.multiState.remove();
            } else {
                // Multi leaf dragging
                this.multiState.apply();
            }
            dragger.apply();
        </method>

        <method name="stopDrag">
            dragger.remove();
            if (_dragtreeref.validdrop) {
                setVisible(false);
            } else {
                returnToBase();
            }
        </method>

        <method name="_handleReturnToInit" event="onstop"
                reference="returnToInit">
            setVisible(false);
        </method>
        
        <method event="onmousetrackup">
            Debug.write("onmousetrackup event sent by dragtreefloater");
        </method>

        <!-- Animate the floater back to where the last drag began -->
        <method name="returnToBase">
            returnToInit.doStart();
        </method>
         
        <text name="label" resize="true" datapath="@name" />
        <state name="multiState" apply="false" pooling="true">
            <text y="18">...</text>
        </state>
    </class>
</library>
