<library>
    <class name="recursivedriller" extends="datapointer">
        <attribute name="onnode" value="null" />
        <!--- Recursive method. Called to begin drilling. 
              @param nodeName: String name of node to search for and 
              send events when reached. Will match all nodes if 
              set to null. 
              -->
        <method name="drillDown" args="nodeName">
        <![CDATA[
            var currentNodeName = this.getNodeName();
            if (currentNodeName != null) {
                if ((nodeName==null) || (nodeName==currentNodeName)) {
                    this.onnode.sendEvent(this.p);
                }
            }
            if (this.selectChild()) {
                this.drillDown(nodeName);   
                this.selectParent();
            }
            while (this.selectNext()) {
                this.drillDown(nodeName);
            }
        ]]>
        </method>
        <!--- Sets the beginning of the recursive drill-down.
                @param p: LzDataElement to start at.
                -->
        <method name="setStart" args="p">
            this.setPointer(p);
        </method>

        <method event="onnode">
        </method>
    </class>
</library>
