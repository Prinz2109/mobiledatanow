<library>
    <class name="dragtreenode" extends="sharedtreenode"
           oninit="LzTrack.register(this, parent.trackgroupname)">
        <attribute name="_dragtargetstring" value="$path{'@_dragtarget'}" />
        <attribute name="dragtarget" 
                   value="${_dragtargetstring=='true'?true:false}" />

        <attribute name="_draggablestring" value="$path{'@_draggable'}" />
        <attribute name="draggable" 
                   value="${_draggablestring=='true'?true:false}" />

        <method event="onmousetrackover">
            if (dragtarget) {
                this.setAttribute("bgcolor", mouseoverdroptargetbgcolor);
            } else {
                this.setAttribute("bgcolor", mouseovernotdroptargetbgcolor);
            }
        </method>

        <method event="onmousedown">
        <![CDATA[
            /* If the tree is multi-select, it's OK to drag multiple nodes,
               so long as they are not at different depths.
               If any of the selected nodes are not draggable, 
               the drag should fail too. */
            var sel = parent.getSelection();
            for (var i=1; i<sel.length; i++) {
                if ((sel[i-1].parentNode != sel[i].parentNode)
                    ||(!sel[i].getAttr("_draggable"))) {
                    parent.clearSelection();
                    return;
                }
                lastItemParent = sel[i].parentNode;
            }
            parent.startDrag(this);
            LzTrack.activate(parent.trackgroupname);
        ]]>
        </method>

        <method event="onmouseup">
	    parent.floaterref.stopDrag();
            LzTrack.deactivate(parent.trackgroupname);
        </method>

        <method event="onmousetrackout">
            //restores bgcolor by firing constraint
            this.setAttribute( "highlight", highlight );
        </method>

        <method event="onmousetrackup">
            parent.handleDrop(this);
            /*
            gDataMan.associate( gRequirements.getDraggedID() , 
                                datapath.p.attributes.id );
            */
        </method>


    </class>
</library>
