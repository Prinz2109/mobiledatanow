<canvas width="100%" height="100%" debug="true" >
    <include href="tree/dragtree/library.lzx" />
    <view id="dragtreefloaterContainer">
        <attribute name="dragtreefloaters" value="new Array()"/>
        <attribute name="count" value="0"/>
        <dragtreefloater id="floater" />
        <dragtreefloater id="floater2"/>
        <dragtreefloater id="floater3"/>
        <dragtreefloater id="floater4"/>
        <handler name="oninit">
            this.dragtreefloaters[0] = floater;
            this.dragtreefloaters[1] = floater2;
            this.dragtreefloaters[2] = floater3;
            this.dragtreefloaters[3] = floater4;
        </handler>         
    </view>
    
    <dataset name="test">
         <node1 field="Customer">
                <subnode field="Age" />
                <subnode field="First Name" />
                <subnode field="Last Name" />
                <subnode field="Middle Name" />
        </node1>
        <node2 field="Order">
                <subnode field="hi" field2="Order Number" />
                <subnode field="Order Item" />
        </node2>
        <node3 field="Address">
                <subnode field="House Number" />
                <subnode field="Street" />
                <subnode field="Suburb" />
                <subnode field="Zip" />
                <subnode field="Postal" />
                <subnode field="City" />
                <subnode field="Country" />
        </node3>
        <node4 field="Invoice Number"/>
    </dataset>

    <dataset name="dsFlat">
        <root>
            <node name="Fruits" _dragtarget="true"
                  __OPTTREE_META_open="true">
                <node name="Apples" _draggable="true">
                    <node name="Granny Smith" price="0.89" _draggable="true" />
                    <node name="Fuji" price="1.29" _draggable="true" />
                    <!-- <node name="Golden Delicious" price="0.89" _draggable="true" /> -->
                </node>
                <node name="Peppers" price="1.39" _draggable="true" />
                <node name="Oranges" price="1.39" _draggable="true" />
                <!-- <node name="Pears" price="0.59" _draggable="true" /> -->
            </node>
            <node name="Vegetables" _dragtarget="true">
                <node name="Carrots" price="0.25" />
                <node name="Potatoes">
                    <node name="Jersey Potatoes" price="0.99" />
                    <node name="Idaho Potatoes" price="0.69" />
                    <node name="King Edward Potatoes" price="1.29" />
                </node>
            </node>
            <node name="Shopping List" _dragtarget="true">
                <node name="Loo Paper" price="0.99" />
            </node>
            <node name="Zeta" _dragtarget="true">
            </node>
        </root>
  </dataset>
   <dataset name="dsFlat2">
        <root>
            <node name="Fruits" _dragtarget="true"
                  __OPTTREE_META_open="true">
                <node name="Apples" _draggable="true">
                    <node name="Granny Smith" price="0.89" _draggable="true" />
                    <!-- <node name="Fuji" price="1.29" _draggable="true" /> -->
                    <node name="Golden Delicious" price="0.89" _draggable="true" />
                </node>
                <node name="Peppers" price="1.39" _draggable="true" />
                <!-- <node name="Oranges" price="1.39" _draggable="true" /> -->
                <node name="Pears" price="0.59" _draggable="true" />
            </node>
            <node name="Vegetables" _dragtarget="true">
                <node name="Carrots" price="0.25" />
                <node name="Potatoes">
                    <node name="Jersey Potatoes" price="0.99" />
                    <node name="Idaho Potatoes" price="0.69" />
                    <node name="King Edward Potatoes" price="1.29" />
                </node>
            </node>
            <node name="Shopping List" _dragtarget="true">
                <node name="Loo Paper" price="0.99" />
            </node>
            <node name="Zeta" _dragtarget="true">
            </node>
        </root>
  </dataset>
   <dataset name="dsFlat3">
        <root>
            <node name="Fruits" _dragtarget="true"
                  __OPTTREE_META_open="true">
                <node name="Apples" _draggable="true">
                    <node name="Granny Smith" price="0.89" _draggable="true" />
                    <node name="Fuji" price="1.29" _draggable="true" />
                    <node name="Golden Delicious" price="0.89" _draggable="true" />
                </node>
                <node name="Peppers" price="1.39" _draggable="true" />
                <node name="Oranges" price="1.39" _draggable="true" />
                <node name="Pears" price="0.59" _draggable="true" />
            </node>
            <node name="Vegetables" _dragtarget="true">
                <node name="Carrots" price="0.25" />
                <node name="Potatoes">
                    <node name="Jersey Potatoes" price="0.99" />
                    <node name="Idaho Potatoes" price="0.69" />
                    <node name="King Edward Potatoes" price="1.29" />
                </node>
            </node>
            <node name="Shopping List" _dragtarget="true">
                <node name="Loo Paper" price="0.99" />
            </node>
            <node name="Zeta" _dragtarget="true">
            </node>
        </root>
  </dataset>
  <view width="${immediateparent.width}"
		height="${immediateparent.height}">   
	<view name="all" x="0" y="0" width="${immediateparent.width}"
		height="${immediateparent.height}" bgcolor="${canvas.bgcolor}">
		<simplelayout axis="x"/>  
		<view name="projectButton" x="0" width="21" valign="middle" resource="../images/projectsClosed.png" clickable="true">
			<method event="onclick">
				Debug.write("projectButton clicked....");
				/*
				 * We have to assign background once again.(in class defintion or instance level)
				*/
				var newTab=new mainTab(projectTabs,{bgcolor:'0xffffff',text:"Sample2",currProjectId:"2"});
				Debug.write("currProjectID in projectView", "2");
				newTab.content.setWidth(projectTabs.immediateparent.width);
				newTab.content.setHeight(projectTabs.immediateparent.height);				    		
				// save this instance to the array
				projectTabs.newtappaneArray[projectTabs.newtappaneArray.length]=newTab;
				newTab.tab.setAttribute("selected", true);
			</method>
		</view>
		<tabs id="projectTabs" _contentWidth="${immediateparent.width-21}" _contentHeight="${immediateparent.height}" bgcolor="${canvas.bgcolor}"> 
                       <!-- an array which refer to all new tabpanes-->
			<attribute name="newtappaneArray" value="new Array()"/>
			<attribute name="currTab"/>
			<attribute name="projectIDConstants" value="1"/>
			<method event="oninit">
				<![CDATA[
				Debug.write("projectIDConstants: ", projectIDConstants);
				projectIDConstants = 1;
				Debug.write("projectIDConstants: ", projectIDConstants);	
				var newTab=new mainTab(this,{bgcolor:'0xffffff',text:"Sample1",currProjectId:"1"});
				newTab.content.setWidth(this.immediateparent.width);						
					newTab.content.setHeight(this.immediateparent.height);				    		
				// save this instance to the array
				this.newtappaneArray[this.newtappaneArray.length]=newTab;
				newTab.tab.setAttribute("selected", true);
				this.setAttribute("currTab", newTab);
				newTab.tab.setAttribute("bgcolor", canvas.bgcolor);
				]]>
			</method>					
		</tabs> 	
	</view>		
    </view>
    
    <class name="mainTab" extends="tabpane" inset_left="0" inset_top="0" inset_bottom="0" inset_right="0" bgcolor="${canvas.bgcolor}">
        <method event="oninit">
           this.content.setWidth(this.immediateparent.width);
	   this.content.setHeight(this.immediateparent.height);
	   projectTabs.setAttribute("currTab", this);	    
        </method>     	

	<attribute name="currProject" type="string" value="null"/>
	<attribute name="currProjectId" type="number" value="1"/>
	<attribute name="currView" type="string" value=""/>
	<attribute name="currDBView" type="string" value="none"/>
	<attribute name="currDBSelNode"/>
	<attribute name="currUserView" type="string" value="none"/>
	<attribute name="currUserSelNode"/>
	<attribute name="currTabelement"/>

        <method event="onselect" reference="this.tab">
       		 if (this.tab.selected) {
       		 	Debug.write("which projectTabs selected....", this.tab.text, this.currTabelement.text);	
       		 	projectTabs.setAttribute("currTab", this);				
				
				//parent.content.setWidth(parent.immediateparent.width-10);				
				this.content.setWidth(this.immediateparent.width);
				
				//parent.content.setHeight(parent.immediateparent.height-20);
				this.content.setHeight(this.immediateparent.height);
				
				Debug.write("maintab selected Current tab is: ", projectTabs.currTab.currProjectId);
				Debug.write("maintab selected Current projectId is: ", currProjectId);
				
				this.currTabelement.openned();       		 	
       		 }
       		 	        		
       	</method>
       	
       	<view name="_projectView" x="0" y="0" width="${parent.width}" height="${parent.height}" visible="true" opacity="1">
	    <simplelayout axis="x" locked="true" />
	    
            <view name="nav" height="${immediateparent.height}"  width="${parent._horiz_divider.x}">
		    <simplelayout axis="y"/>
		    <navigationView name="navigation" maintab="${classroot}" width="${immediateparent.width}" 
                                    height="${immediateparent.height-30}" spacing="1"/>      
	    </view><!-- leftPanel -->
	    
	    <view name="_horiz_divider" x="${parent.width / 6}" width="5"
			    bgcolor="#e3e3e3" height="${immediateparent.height}" 
			    onmousedown="dragging.apply()"
				onmouseup="dragging.remove()">
		<state name="dragging">
		    <attribute name="minX" value="150"/>
		    <attribute name="maxX" value="${parent.width / 2}"/>
		    <attribute name="thisX" value="${parent.getMouse('x')}"/>
	            <attribute name="x" value="${Math.max(Math.min(this.maxX, this.thisX), this.minX )}"/>
	        </state>
	    </view><!-- _horiz_divider -->
	
	    <view name="_rightView" x="${parent._horiz_divider.x + parent._horiz_divider.width}"
		width="${immediateparent.width - parent.nav.navigation.width - parent._horiz_divider.width}"
		height="${immediateparent.height}">
	
			<simplelayout axis="y" />
		
			<method event="onwidth">
			    this._upperPart._mainView.setAttribute("width", this.width - 1);
			</method>
		
			<view name="_upperPart" width="${immediateparent.width}" height="${10}" >
                            
			    <simplelayout axis="y" />
			    <!-- The main view. -->
			    <view name="_mainView" width="${immediateparent.width}"
					height="${parent.height }">
			    </view><!-- _mainView -->
			</view><!-- upperPart -->
	
            </view><!-- rightView -->
	</view><!-- project view -->		
    </class>
    
    <class name="navigationView" width="${immediateparent.width / 6}"
                height="${immediateparent.height}" x="0" y="0"
                extends="tabslider" clip="true" slideduration="1000">
        <attribute name="maintab"/>
        <attribute name="treeDbs" /> 
        
        <datapointer name="copyFrom_dp" />
        
	    <tabelement name="databases" text="database" height="500" selected="true">
			<!-- <attribute name="currProjectId" value="$once{classroot.currProjectId}"/> -->
			<method event="oninit">
				Debug.write("navigation height", this.height);
				classroot.maintab.setAttribute("currTabelement", this);
	        </method> 
	        <stableborderlayout axis="y" />
	        <view width="${immediateparent.width}" height="300">

	            <view width="100%" height="100%" clip="true">
	                <dragtree  name="treeDbsName"  	nodepath="node" nodeclass="dragtreenode"  multiselect="true" >
	                    <attribute name="currselnode" value="null"/>
					    <method event="oninit">
							//Debug.write("************treeDbs oninit **********", this.floaterref);	
		                    //classroot.floaterref.setAttriubte("_dragtreeref", this);                            
		                    classroot.setAttribute("treeDbs",this);
		                    //Debug.write("maintabbane", classroot.maintab._projectView.nav.navigation.treeDbs);
		
		                    Debug.write(dragtreefloaterContainer.dragtreefloaters[dragtreefloaterContainer.count]);
		                    
		                    classroot.treeDbs.setAttribute("floaterref", dragtreefloaterContainer.dragtreefloaters[dragtreefloaterContainer.count]); 
		                    classroot.treeDbs.floaterref.setAttribute("_dragtreeref", this);
		                    //Debug.write(classroot.treeDbs.floaterref, "set ref", classroot.treeDbs.floaterref.);
		                    dragtreefloaterContainer.count ++;
					    </method>                   
					    <handler name="oncurrselnode">
		                    this.select(this.getAttribute("currselnode"));
		                </handler>
			
					    <attribute name="currselnodeData" />
					    <handler name="oncurrselnodeData">
		                </handler>  

	                   
		                <handler name="onselect" args="selNode">
						   <![CDATA[
                               if(selNode != null){ 
									this.setAttribute("currselnode", selNode);
									var selNode_dp = selNode.datapath.p;                        
									this.setAttribute("currselnodeData", selNode_dp);  
									var selNodeName = selNode_dp.getAttr("name");
									Debug.write("!!!!!!!!!!Selected node is selNodeName: ", selNode, selNodeName);	                    
                                }
						    ]]>
					    </handler>
						<method reference="classroot.getAttribute('treeDbs')" event="ondragdrop" args="resp">
							Debug.write("treeDbs Drag Drop start working!!!!!!!!!!!!!!!!!");
							var dragees = resp.draggedNodes;
							var fromNode = resp.from;
							Debug.write("drag method for Databases tree");
							Debug.write("fromNode: ", fromNode);
							var toNode = resp.to;
							Debug.write("toNode: ", toNode);
	
							var selectedNode = classroot.treeDbs.getAttribute("currselnode");
	        	    		Debug.write("DB openned A DB view exists already.", 
	        	    				classroot.maintab.currProjectId, 
	                    			selectedNode.datapath.p.getAttr("name")); 


			    	        classroot.copyFrom_dp.setPointer(dragees[0]);
			        	    var draggedName = classroot.copyFrom_dp.getNodeAttribute("name");
//***************************PLEASE NOTICE THIS LINE IN DEBUG WINDOW**************************************
				            Debug.write("Dragged name is: "+ draggedName );	
						</method>
               		</dragtree>
	               
	            </view>
	        </view>
	        <view name="buttonpanel" width="${immediateparent.width}">
	            <simplelayout axis="y" spacing="3" />
	      		<binView align="left" whichTree="${classroot.treeDbs}" maintab="${classroot.maintab}">
		 			<method event="oninit">
			            classroot.setAttribute("rubbishViewForDatabases",this);
			            Debug.write("rubbishViewForDatabases this.whichTree", this.whichTree);
				    </method>      			
	      		</binView>
	        </view>
	        <method name="openned">
	            super.openned();
	            Debug.write("Current project id in navigationView", classroot.maintab.currProjectId);
	            // Needs to be changed to ondata event and finding the first database.
	            classroot.maintab.setAttribute("currTabelement", this);  
	            
	            if (projectTabs.currTab.text == "Sample1"){
	            	Debug.write("set tree datapath to dsFlat");
	            	classroot.treeDbs.setAttribute("datapath", "dsFlat:/root");
	            }else if (projectTabs.currTab.text == "Sample2") {
	            	Debug.write("set tree datapath to dsFlat2");
	            	classroot.treeDbs.setAttribute("datapath", "dsFlat2:/root");
	            } 		
                if(classroot.treeDbs.getAttribute("currselnode") != null){
        	    	Debug.write("DB openned A DB view exists already.", classroot.maintab.currProjectId, 
                    classroot.treeDbs.getAttribute("currselnode").datapath.p.getAttr("name"));               
                }
                classroot.treeDbs.select(classroot.treeDbs.getAttribute("currselnode"));
                return;
	        </method>
	    </tabelement>        
        
    </class>
	<dataset name="recycleData"/>
	<class name="binView" width="50" 
			height="50" ><!-- bgcolor="${canvas.bgcolor}" extends="mdn_roundrect" -->
			
		
		<attribute name="isFull" type="boolean" value="false"/>
		<attribute name="whichTree"/>
		<attribute name="maintab"/>
		
		<datapointer xpath="recycleData:/*" rerunxpath="true"
			ondata="processData();" onerror="canvas.showError(this);"
			ontimeout="canvas.showTimeout();">
			<method name="processData">
				Debug.write("received recycleData: " + this.serialize());
				rootNode = recycleData.getFirstChild();
	    	if (rootNode.hasChildNodes()){
	    		classroot.setAttribute("isFull", true);
	    	}
			</method>
		</datapointer>
					
		<view name="rubbishBinIcon" align="center" valign="middle" 
					resource="../images/rubbish_bin.png"
					clickable="true">
			
			<state apply="${parent.parent.isFull}">
				<attribute name="resource" value="../images/rubbish_bin_full.png"/>
			</state>
			<state apply="${!parent.parent.isFull}">
				<attribute name="resource" value="../images/rubbish_bin.png"/>
			</state>
			
			<method event="oninit">
		        Debug.write("which tree", classroot.whichTree);
		        classroot.whichTree.registerExternalDropTarget(this);
		        /*treeNavUsers.registerExternalDropTarget(this);
		        treeSett.registerExternalDropTarget(this);
		        treePres.registerExternalDropTarget(this);
		        treeDbs.registerExternalDropTarget(this);
		        */      
		    </method>
	    
	        <method event="onclick">
		      	Debug.write("Manage the rubbish bin window");
		      	if (rubbishBinWindow.isMax){
		      		Debug.write('close window');
		      		rubbishBinWindow.max.remove(); 
		      		rubbishBinWindow.min.apply();
		      	} else {
		      		Debug.write('open window and get the rubbish data from db');
		      		recycleData.doRequest();
		      		rubbishBinWindow.max.apply(); 
		      		rubbishBinWindow.min.remove();
		      		
		      		Debug.write("classroot.maintab.currProjectId", classroot.maintab.currProjectId);
		      		Debug.write("current tree is ", classroot.whichTree);
		      		if (classroot.whichTree.name == "treeDbsName"){
		      			Debug.write("current tree is tree Dbs", classroot.whichTree);
		      			controller.updateDBRecycleBin(classroot.maintab.currProjectId);
		      		}
		      		else if (classroot.whichTree.name == "treeNavUsers"){
		      			Debug.write("current tree is treeNavUsersId", classroot.whichTree);
		      			controller.updateUsersRecycleBin(classroot.maintab.currProjectId);
		      		}
		      	}
		      	rubbishBinWindow.isMax = !rubbishBinWindow.isMax;
	        </method>
		</view>
	</class>    
   
</canvas>


