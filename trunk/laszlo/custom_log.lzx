<?xml version="1.0" encoding="UTF-8" ?>
<library>
    <resource name="eventTabMid">
    	<frame src="../customresources/eventlog/eventlog_mid.png" />
    	<frame src="../customresources/eventlog/eventlog_mid_transparent.png" />
    </resource>
    <resource name="eventTabLeft">
    	<frame src="../customresources/eventlog/eventlog_tl.png" />
    	<frame src="../customresources/eventlog/transparent.png" />
    </resource>
    <resource name="eventTabRight">
    	<frame src="../customresources/eventlog/eventlog_tr.png" />
    	<frame src="../customresources/eventlog/transparent.png" />
    </resource>
	<class name="customLog" x="0" y="${canvas.height - this.height}" clip="true" extends="basewindow" opacity="0">
        <attribute name="sSelected" />
        <handler name="oninit">
			//Default Variables
			customLogIsOpen = false;
		</handler>
        <!-- Open / Close Methods -->
        <method name="open">
           //Open Method
           this.animatorOpen.doStart();
        </method>
        
        <method name="close">
            //Close Method
            this.animatorClose.doStart();
        </method>
        
        <method event="oninit">
     	   <![CDATA[
        	]]>
        </method>
        
        <!-- Animators -->
        <animator name="animatorOpen" attribute="opacity" to="1" duration="1000" start="false">
            <handler name="onstop">
				<!-- OnStop Event  -->
            </handler>
        </animator>
        
        <animator name="animatorClose" attribute="opacity" to="0" duration="1000" start="false">
            <handler name="onstop">
				<!-- OnStop Event  -->
            </handler>
        </animator>
		
		<!-- Layout -->
		<roundrect name="strokeRoundRect" width="926" height="250" y="0" backgroundStartColor="#3b72b1" backgroundStopColor="#3b72b1" borderColor="#2b5686" borderRadius="4">
				<method event="oninit">
					this.content.setAttribute("x", 1);
					this.content.setAttribute("y", 1);
				</method>
					<!-- Text -->
						<view id="eventLogMenu" width="${parent.width}" height="${parent.height}">
							<method name="setDebugXML" args="sXMLURL, isClearingVariable">
								<![CDATA[
									//Debug.write("Loading XML");
									
									nXMLCounter;
									sCurrXML = sXMLURL;
									
									//Loading Symbol
									reDisplayXML = function() {
						        		//Debug.write("REDISPLAY XML");
									    //Add To Variable
									    //eventLogTextID.addEventLogText(myXML, true);
									    //Generate Random Number to stop Cacheing
									    var myRandomNumber = Math.random();
									    if(nLog == 1) {
											var sNewLink = sCurrXML + "_log.xml?nRandomNumber=" + myRandomNumber;
										} else {
											var sNewLink = sCurrXML + "_err.xml?nRandomNumber=" + myRandomNumber;
										}
									    //Debug.write("Random Number Is: ", myRandomNumber);
									    myXML.load(sNewLink);
									    //Debug.write("Current XML IS: ", sNewLink);
									    //Debug.write("Is Log: ", nLog);
						        	}

									//Load XML
									var myXML = new XML();
									myXML.ignoreWhite = true;
									myXML.onLoad = function(success) {
									    //Clear Previous Interval
									    clearInterval(nXMLCounter);
									    /*Debug.write("success: ", success);
									    Debug.write("loaded: ", myXML.loaded);
									    Debug.write("status: ", myXML.status);
									    Debug.write("XML IS: ", myXML);*/
									    if(success) {
										    //Add To Variable
										    eventLogTextID.addEventLogText(myXML.childNodes, true);
									    } else {
									    	//No XML
										    eventLogTextID.addEventLogText("No Event / Error Log Generated Yet", true);
									    }
									    //Counter
									    nXMLCounter = setInterval(reDisplayXML, 5000)
									};
									if(nLog == 1) {
										myXML.load(sXMLURL + "_log.xml");
									} else {
										myXML.load(sXMLURL + "_err.xml");
									}
									
									if(isClearingVariable) {
										clearInterval(nXMLCounter);
										//Debug.write("Clear COUNTER");
									}
								]]>
					        </method> 
							<method name="setBoldLink" args="sName">
								<![CDATA[
									//Clear Bold
									tabBackground0.leftHand.setResourceNumber(2);
									tabBackground0.viewText.setResourceNumber(2);
									tabBackground0.rightHand.setResourceNumber(2);
									tabBackground1.leftHand.setResourceNumber(2);
									tabBackground1.viewText.setResourceNumber(2);
									tabBackground1.rightHand.setResourceNumber(2);
									tabBackground2.leftHand.setResourceNumber(2);
									tabBackground2.viewText.setResourceNumber(2);
									tabBackground2.rightHand.setResourceNumber(2);
									tabBackground3.leftHand.setResourceNumber(2);
									tabBackground3.viewText.setResourceNumber(2);
									tabBackground3.rightHand.setResourceNumber(2);
									tabBackground4.leftHand.setResourceNumber(2);
									tabBackground4.viewText.setResourceNumber(2);
									tabBackground4.rightHand.setResourceNumber(2);
									
									//Set White Text
									link_0.myText.setAttribute("fgcolor", 0xFFFFFF);
									link_1.myText.setAttribute("fgcolor", 0xFFFFFF);
									link_2.myText.setAttribute("fgcolor", 0xFFFFFF);
									link_3.myText.setAttribute("fgcolor", 0xFFFFFF);
									link_4.myText.setAttribute("fgcolor", 0xFFFFFF);
									
									//Set Underline
									sName.leftHand.setResourceNumber(1);
									sName.viewText.setResourceNumber(1);
									sName.rightHand.setResourceNumber(1);
								]]>
					        </method> 
							<roundrect name="tabOuter" width="914" height="218" x="5" y="25" backgroundStartColor="#FFFFFF" backgroundStopColor="#FFFFFF" borderColor="#FFFFFF" borderRadius="2">
							</roundrect>
							<!-- Close Icon -->
							<view width="20" height="19" x="903" y="1" resource="close_button" clip="true">
								<method event="onclick">
									classroot.close();
									myCustomLog.customLogIsOpen = false;
								</method>
							</view>
							<!--  avaleshe? -->
							<view name="link_0" height="24" x="${parent.tabOuter.x + 4}" y="${(parent.tabOuter.y) - 20}">
<!-- 								<method event="oninit">
									nLog = 1;
									//XML Debug
									eventLogMenu.setDebugXML("server");
									//Default as Selected
									classroot.setAttribute("sSelected", this);
									//Default Others
									tabBackground1.leftHand.setResourceNumber(2);
									tabBackground1.viewText.setResourceNumber(2);
									tabBackground1.rightHand.setResourceNumber(2);
									tabBackground2.leftHand.setResourceNumber(2);
									tabBackground2.viewText.setResourceNumber(2);
									tabBackground2.rightHand.setResourceNumber(2);
									tabBackground3.leftHand.setResourceNumber(2);
									tabBackground3.viewText.setResourceNumber(2);
									tabBackground3.rightHand.setResourceNumber(2);
									tabBackground4.leftHand.setResourceNumber(2);
									tabBackground4.viewText.setResourceNumber(2);
									tabBackground4.rightHand.setResourceNumber(2);
							    </method>
								<method event="onclick">
									eventLogMenu.setBoldLink(tabBackground1);
									//XML Debug
									eventLogMenu.setDebugXML("mailserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
							    <view name="tabBackground" id="tabBackground1">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="Email Service" fgcolor="0x3c6ca5" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text> -->							

 								<method event="oninit">
									nLog = 1;
									//Debug.write("MDN Server Clicked");
									//parent.setBoldLink(link_1);
									//XML Debug
									eventLogMenu.setDebugXML("mailserver");
									//Default as Selected
									classroot.setAttribute("sSelected", this);
									//Default Others
									tabBackground1.leftHand.setResourceNumber(2);
									tabBackground1.viewText.setResourceNumber(2);
									tabBackground1.rightHand.setResourceNumber(2);
									tabBackground2.leftHand.setResourceNumber(2);
									tabBackground2.viewText.setResourceNumber(2);
									tabBackground2.rightHand.setResourceNumber(2);
									tabBackground3.leftHand.setResourceNumber(2);
									tabBackground3.viewText.setResourceNumber(2);
									tabBackground3.rightHand.setResourceNumber(2);
									tabBackground4.leftHand.setResourceNumber(2);
									tabBackground4.viewText.setResourceNumber(2);
									tabBackground4.rightHand.setResourceNumber(2);
							    </method>
								<method event="onclick">
									//Debug.write("MDN Server Clicked");
									eventLogMenu.setBoldLink(tabBackground0);
									//XML Debug
									eventLogMenu.setDebugXML("mailserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
									//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
								 <view name="tabBackground" id="tabBackground0">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="Email Service" fgcolor="0x3c6ca5" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text> 
							</view> 
							
							<!-- inja akhareshe? -->
							 
							<view name="link_1" height="24" x="${(parent.link_0.x + parent.link_0.width) + 1}" y="${(parent.tabOuter.y) - 20}">
								<!-- <method event="onclick">
									eventLogMenu.setBoldLink(tabBackground1);
									//XML Debug
									eventLogMenu.setDebugXML("mailserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
							    <view name="tabBackground" id="tabBackground1">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="Email Service" fgcolor="0xffffff" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text> -->
								<method event="onclick">
									eventLogMenu.setBoldLink(tabBackground2);
									//XML Debug
									eventLogMenu.setDebugXML("smsserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
								 <view name="tabBackground" id="tabBackground2">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="GSM Modem Service" fgcolor="0xffffff" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text>
							</view>
							<view name="link_2" height="24" x="${(parent.link_1.x + parent.link_1.width) + 1}" y="${(parent.tabOuter.y) - 20}">
								<method event="onclick">
									eventLogMenu.setBoldLink(tabBackground3);
									//XML Debug
									eventLogMenu.setDebugXML("smppserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
								 <view name="tabBackground" id="tabBackground3">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="SMPP Service" fgcolor="0xffffff" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text>
							</view>
							<view name="link_3" height="24" x="${(parent.link_2.x + parent.link_2.width) + 1}" y="${(parent.tabOuter.y) - 20}">
								<method event="onclick">
									eventLogMenu.setBoldLink(tabBackground4);
									//XML Debug
									eventLogMenu.setDebugXML("imserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
								 <view name="tabBackground" id="tabBackground4">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="IM Service" fgcolor="0xffffff" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text>								
							</view>
<!-- 							<view name="link_4" height="24" x="${(parent.link_3.x + parent.link_3.width) + 1}" y="${(parent.tabOuter.y) - 20}">
								<method event="onclick">
									eventLogMenu.setBoldLink(tabBackground4);
									//XML Debug
									eventLogMenu.setDebugXML("imserver");
									//Set Blue
									myText.setAttribute("fgcolor", 0x3c6ca5);
							    	//Set As Selected
									classroot.setAttribute("sSelected", this);
							    </method>
							    <method event="onmouseover">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(1);
								    	tabBackground.viewText.setResourceNumber(1);
								    	tabBackground.rightHand.setResourceNumber(1);
								    	myText.setAttribute("fgcolor", 0x3c6ca5);
							    	}
							    </method>
							    <method event="onmouseout">
							    	if(classroot.sSelected != this) {
								    	tabBackground.leftHand.setResourceNumber(2);
								    	tabBackground.viewText.setResourceNumber(2);
								    	tabBackground.rightHand.setResourceNumber(2);
								    	myText.setAttribute("fgcolor", 0xffffff);
							    	}
							    </method>
								 <view name="tabBackground" id="tabBackground4">
									<view name="leftHand" width="5" height="21" resource="eventTabLeft" />
									<view name="viewText" height="21" x="5" stretches="width" resource="eventTabMid" />
									<view name="rightHand" width="5" height="21" resource="eventTabRight" x="${parent.viewText.x + parent.viewText.width}" />
								</view>
								<text name="myText" fontsize="11" text="IM Service" fgcolor="0xffffff" x="11" y="1" resize="true">
									<method event="oninit">
										parent.tabBackground.viewText.setWidth(this.width + 11);
								    </method>
								</text>
							</view>							-->
							<view clip="true" width="${parent.tabOuter.width - 12}" height="${parent.tabOuter.height - 12}" x="${parent.tabOuter.x + 6}" y="${parent.tabOuter.y + 6}">
								<text id="eventLogTextID" fgcolor="0x5A5A5A" bgcolor="0xFFFFFF" width="100%" multiline="true">
									<handler name="oninit">
										<![CDATA[
											//Default Text
											myLogText = "";
												
											//Loading Symbol
											nCreateNumber = 0;
											blinkText = function() {
								        		if(nCreateNumber < 1) {
								        			//Debug.write("Show Animation");
								        			eventlog_loader.setAttribute("visible", true);
								        		} else {
								        			//Debug.write("DON'T Show Animation");
								        			eventlog_loader.setAttribute("visible", false);
								        		}
								        		nCreateNumber++;
								        		//clearInterval(nCounter);
								        	}
								        	nCounter = setInterval(blinkText, 1000);
											
											//Function Test
											//eventLogTextID.addEventLogText("Testing that \n the log works");
											//eventLogTextID.addEventLogText("and that it handles multiple \n lines and includes \n a scroll bar to \n scroll with");
											//eventLogTextID.addEventLogText("and that it handles multiple \n lines and includes \n a scroll bar to \n scroll with");
										]]>
									</handler>
									
									<method name="addEventLogText" args="sText, isClear">
										<![CDATA[
											if(isClear) {
												myLogText = "";
											} else {
												eventLogMenu.setDebugXML("", true);
											}
											myLogText += sText+"\n";
											nCreateNumber = 0;
											eventLogTextID.setText(myLogText);
											//Debug.write("123456789#############################################", sText);
											//Debug.write("ENTIRE #############################################", myLogText);
										]]>
							        </method>              
								</text>
								<scrollbar/>
							</view>
						</view>
						<!-- 
						<view id="eventLogMenu">
							<method name="setDebugXML" args="sXMLURL, isClearingVariable">
								<![CDATA[
									//Debug.write("Loading XML");
									
									nXMLCounter;
									sCurrXML = sXMLURL;
									
									//Loading Symbol
									reDisplayXML = function() {
						        		Debug.write("REDISPLAY XML");
									    //Add To Variable
									    //eventLogTextID.addEventLogText(myXML, true);
									    //Generate Random Number to stop Cacheing
									    var myRandomNumber = Math.random();
									    if(nLog == 1) {
											var sNewLink = sCurrXML + "_log.xml?nRandomNumber=" + myRandomNumber;
										} else {
											var sNewLink = sCurrXML + "_err.xml?nRandomNumber=" + myRandomNumber;
										}
									    Debug.write("Random Number Is: ", myRandomNumber);
									    myXML.load(sNewLink);
									    Debug.write("Current XML IS: ", sNewLink);
									    Debug.write("Is Log: ", nLog);
						        	}

									//Load XML
									var myXML = new XML();
									myXML.ignoreWhite = true;
									myXML.onLoad = function(success) {
									    //Clear Previous Interval
									    clearInterval(nXMLCounter);
									    Debug.write("success: ", success);
									    Debug.write("loaded: ", myXML.loaded);
									    Debug.write("status: ", myXML.status);
									    Debug.write("XML IS: ", myXML);
									    if(success) {
										    //Add To Variable
										    eventLogTextID.addEventLogText(myXML.childNodes, true);
									    } else {
									    	//No XML
										    eventLogTextID.addEventLogText("No Event / Error Log Generated Yet", true);
									    }
									    //Counter
									    nXMLCounter = setInterval(reDisplayXML, 10000)
									};
									if(nLog == 1) {
										myXML.load(sXMLURL + "_log.xml");
									} else {
										myXML.load(sXMLURL + "_err.xml");
									}
									
									if(isClearingVariable) {
										clearInterval(nXMLCounter);
										Debug.write("Clear COUNTER");
									}
								]]>
					        </method> 
							<method name="setBoldLink" args="sName">
								<![CDATA[
									//Clear Bold
									link_1.setAttribute("visible", false);
									link_2.setAttribute("visible", false);
									link_3.setAttribute("visible", false);
									link_4.setAttribute("visible", false);
									
									//Set Underline
									sName.setAttribute("visible", "true");
								]]>
					        </method> 
							<simplelayout axis="x" spacing="1" />
							<text name="mdn_server" text="MDN Server " fgcolor="0x000000">
								<method event="oninit">
									nLog = 1;
									Debug.write("MDN Server Clicked");
									//parent.setBoldLink(link_1);
									//XML Debug
									parent.setDebugXML("server");
							    </method>
								<method event="onclick">
									Debug.write("MDN Server Clicked");
									parent.setBoldLink(link_1);
									//XML Debug
									parent.setDebugXML("server");
							    </method>
							</text>
							<text text="| " />
							<text name="email_server" text="Email Server " fgcolor="0x000000">
								<method event="onclick">
									Debug.write("Email Server Clicked");
									parent.setBoldLink(link_2);
									//XML Debug
									parent.setDebugXML("mailserver");
							    </method>
							</text>
							<text text="| " />
							<text name="sms_server" text="SMS Server " fgcolor="0x000000">
								<method event="onclick">
									Debug.write("SMS Server Clicked");
									parent.setBoldLink(link_3);
									//XML Debug
									parent.setDebugXML("smsserver");
							    </method>
							</text>
							<text text="| " />
							<text name="im_server" text="IM Server" fgcolor="0x000000">
								<method event="onclick">
									Debug.write("IM Server");
									parent.setBoldLink(link_4);
									//XML Debug
									parent.setDebugXML("imserver");
							    </method>
							</text>
							<text text="      [ " />
							<text name="islog" text="log " fgcolor="0x000000" fontstyle="bold">
								<method event="onclick">
									//Debug.write("Is Log");
									nLog = 1;
									parent.iserror.setAttribute("fontstyle", "normal");
									this.setAttribute("fontstyle", "bold");
									Debug.write(sCurrXML);
									reDisplayXML();
							    </method>
							</text>
							<text text="| " />
							<text name="iserror" text="error" fgcolor="0x000000">
								<method event="onclick">
									//Debug.write("IM Server");
									nLog = 0;
									parent.islog.setAttribute("fontstyle", "normal");
									this.setAttribute("fontstyle", "bold");
									Debug.write(sCurrXML);
									reDisplayXML();
							    </method>
							</text>
							<text text=" ]" />
						</view>
						<view width="69" id="link_1" height="1" x="425" y="14" bgcolor="0x000000" visible="true" />
						<view width="74" id="link_2" height="1" x="517" y="14" bgcolor="0x000000" visible="false" />
						<view width="68" id="link_3" height="1" x="613" y="14" bgcolor="0x000000" visible="false" />
						<view width="57" id="link_4" height="1" x="705" y="14" bgcolor="0x000000" visible="false" />
					</view>
					<view name="mainView" width="${parent.width - 18}" height="${parent.height - 36}">
						<scrolledittext id="eventLogTextID" fgcolor="0x5A5A5A" bgcolor="0xf9f9f9" fontsize="11" multiline="true" width="${parent.width}" height="${parent.height}">
							<handler name="oninit">
								<![CDATA[
									//Default Text
									myLogText = "";
										
									//Loading Symbol
									nCreateNumber = 0;
									blinkText = function() {
						        		if(nCreateNumber < 1) {
						        			//Debug.write("Show Animation");
						        			eventlog_loader.setAttribute("visible", true);
						        		} else {
						        			//Debug.write("DON'T Show Animation");
						        			eventlog_loader.setAttribute("visible", false);
						        		}
						        		nCreateNumber++;
						        		//clearInterval(nCounter);
						        	}
						        	nCounter = setInterval(blinkText, 1000);
									
									//Function Test
									//eventLogTextID.addEventLogText("Testing that \n the log works");
									//eventLogTextID.addEventLogText("and that it handles multiple \n lines and includes \n a scroll bar to \n scroll with");
									//eventLogTextID.addEventLogText("and that it handles multiple \n lines and includes \n a scroll bar to \n scroll with");
								]]>
							</handler>
							
							<method name="addEventLogText" args="sText, isClear">
								<![CDATA[
									if(isClear) {
										myLogText = "";
									} else {
										eventLogMenu.setDebugXML("", true);
									}
									myLogText += sText+"\n";
									nCreateNumber = 0;
									eventLogTextID.setText(myLogText);
									//Debug.write("123456789#############################################", sText);
									//Debug.write("ENTIRE #############################################", myLogText);
								]]>
					        </method>              
						</scrolledittext>
				    </view>
				     -->
		</roundrect>
	</class>
</library>