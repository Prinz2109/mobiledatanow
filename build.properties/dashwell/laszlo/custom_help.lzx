<?xml version="1.0" encoding="UTF-8" ?>
<library>
	<class name="customHelp" extends="basewindow" x="${(canvas.width - this.width) - 25}" y="131" height="0" clip="true" resizable="true">
        <!-- Open / Close Methods -->
        <method name="open">
           //Open Method
           this.animatorOpen.doStart();
           
           //eventLog Display
           eventLogTextID.addEventLogText("Help Opened...");
           
           //Open Default Text
           hinttipdisplayer.setText('Move your mouse over headings to show context sensitive help.');
        </method>
        
        <method name="close">
            //Close Method
            this.animatorClose.doStart();
            
            //eventLog Display
           	eventLogTextID.addEventLogText("Help Closed...");
        </method>
        
        <method event="oninit">
     	   <![CDATA[
	        	/*functionTest = function() {
	        		Debug.write("++++++++++++++++++++++++++++++++++++++++++++++++++++++ TEST"); 
	        		clearInterval(nCounter);
	        	}
	        	nCounter = setInterval(functionTest, 10000);*/
	        	Debug.write("####################################### Help Has Initialised");
	        	customHelpBox.setAttribute("isItOpen", false);
	        	Debug.write("####################################### Is it open?", customHelpBox.isItOpen);
        	]]>
        </method>
        
        <!-- Animators -->        
        <animator name="animatorClose" attribute="height" to="0" duration="600" start="false">
            <handler name="onstop">
				<!-- OnStop Event  -->
            </handler>
        </animator>
        
        <animator name="animatorOpen" attribute="height" to="${parent.strokeRoundRect.height}" duration="600" start="false">
            <handler name="onstart">
				<!-- OnStart Event  -->
            </handler>
        </animator>
		
		<!-- Layout -->
		<roundrect name="strokeRoundRect" x="0" y="0" width="200" height="500" backgroundStartColor="#2b5686" backgroundStopColor="#2b5686" borderColor="#2b5686" borderRadius="4">
				<method event="oninit">
					this.content.setAttribute("x", 1);
					this.content.setAttribute("y", 1);
				</method>
			<roundrect name="blueRoundRect" width="${parent.width - 2}" height="${parent.height - 2}" backgroundStartColor="#3b72b1" backgroundStopColor="#3b72b1" borderColor="#4579b3" borderRadius="4">
				<method event="oninit">
					this.content.setAttribute("x", 0);
					this.content.setAttribute("y", 2);
				</method>
				<!-- Close Icon -->
				<view width="${parent.width - 2}" height="26" x="1">
					<view width="21" height="38" x="${classroot.strokeRoundRect.width - 25}" y="1" resource="close_button" clickable="true">
						<method event="onclick">
							classroot.close();
							customHelpBox.isItOpen = false;
						</method>
						
						<method event="onmouseover">
					    	this.setResourceNumber(2);
					    </method>
					    
					    <method event="onmouseout">
					   		this.setResourceNumber(1);
					    </method>
					</view>
				</view>
				
				<roundrect name="whiteRoundRect" width="${classroot.strokeRoundRect.width - 15}" height="${(parent.height - this.y) - 8}" x="${(parent.width / 2) - (this.width / 2)}" backgroundStartColor="#FFFFFF" backgroundStopColor="#FFFFFF" borderColor="#315f94" borderRadius="4">
					<method event="oninit">
						this.content.setAttribute("x", 10);
						this.content.setAttribute("y", 10);
					</method>
					<view name="mainView" width="${parent.width - 20}">
						<text id="hinttipdisplayer" fgcolor="0x454545" multiline="true" width="${parent.width}">
							<handler name="oninit">
								//by default use english
								hinttipmanager.setAttribute("meta_key","tipid");
								hinttipmanager.setAttribute("meta_value","desc");
								hinttipmanager.setAttribute("meta_entrypath","hinttip_lang:/hinttip-root");
								
								//register where to direct the output
								hinttipmanager.setAttribute("displayref",hinttipdisplayer);
								
								//Default Text
								this.setText('Move your mouse over headings to show context sensitive help.');
								//var newYPos = this.getAttribute("height");
					            //var halfHeight = 124 / 2;
					            //var calcNewYPos = (halfHeight - (newYPos / 2)) - 8;
					            //this.setAttribute("y", calcNewYPos);
							</handler>              
						</text>
				    </view>
				</roundrect>
			</roundrect>
		</roundrect>   
	</class>
</library>