<canvas debug="true">
    <!--
        Use LzModeManager to freeze and defrost all other views happen 
        
	    - LzModeManager -
	    
	    Description:The mode manager controls the dispatch of mouse events to the rest of the system. The mode manager 
	    keeps a stack of modal views. When a view is made modal (with the call makeModal()) only it and its children receive mouse events.
	    
	    Please refer to :
	    http://www.openlaszlo.org/lps4/docs/reference/LzModeManager.html
    
    -->

    <window name="logwin" title="my window" width="250" height="180" x="30" y="75"
            closeable="true" oninit="this.close()">
        <method name="open">
            grayout.setVisible(true);
            grayout.bringToFront();
            // Pushes this window onto the stack of modal views       
            LzModeManager.makeModal(this);
            super.open();
        </method>
        <method name="close">
            // Removes the window (and all the views below it) from the stack of modal views   
            LzModeManager.release(this);
            grayout.setVisible(false);
            super.close();
        </method>
        
        <!-- some content start-->
        
        <view x="10" y="20" layout="axis: x; spacing: 5">
                <text y="2">User name:</text>
                <edittext width="120" name="firstname">your name</edittext>
        </view>
        <view x="20" y="60" layout="axis: x; spacing: 5">
            <text y="2">Password:</text>
            <edittext width="119" name="lastname">your password</edittext>
        </view>
        <button x="139" y="100" onclick="parent.close();">Submit</button>
        
        <!-- some content end-->
    </window>
    
    <view name="settingview" width="423" x="250" height="0" bgcolor="0xCDCDC1" clip="true">
    
        <method name="open">
            this.down.doStart();
        </method>
        <method name="close">
            this.up.doStart();
        </method>
        
        <animator name="up" attribute="height" to="0" duration="600" start="false">
            <handler name="onstop">
                 // Removes the parent view (and all the views below it) from the stack of modal views   
                 LzModeManager.release(parent);
                 grayout.setVisible(false);
            </handler>
        </animator>
        <animator name="down" attribute="height" to="200" duration="600" start="false">
            <handler name="onstart">
                grayout.setVisible(true);
                grayout.bringToFront();
                // Pushes parent view onto the stack of modal views      
                LzModeManager.makeModal(parent);
                parent.bringToFront();
            </handler>
        </animator>
       
         <!-- some content start-->
         
         <text text="Setting" x="10" y="3" />
		 <tabs x="25" y="20">
	        <tabpane inset_left="0" inset_top="0" inset_bottom="0" inset_right="0">insets 0
	            <button>do nothing</button>
	        </tabpane>
	        
	        <tabpane selected="true">default
	            <simplelayout spacing="5"/>
	            <button>faster</button>
	            <radiogroup>
	                <radiobutton>Curt</radiobutton>
	                <radiobutton>Prefer fairly wordy</radiobutton>
	                <radiobutton>I really prefer lots of extra words and fluff in my selections</radiobutton>
	            </radiogroup>
	        </tabpane>
	        
	        <tabpane text="insets 10" inset_left="10" inset_top="10" inset_bottom="10" inset_right="10">
	            <button>don't press</button>
	        </tabpane>
		  </tabs>
         <button x="350" y="158" onclick="parent.close();">close</button>  
         
         <!-- some content end-->
    </view>
    
    <!-- gray mask which covers the whole canvas-->
    
    <view name="grayout" opacity="0.5"
          width="100%" height="100%"
          bgcolor="black" visible="false"/>

    <button x="5" y="5" 
            text="login dialogue" onclick="logwin.open()" />
    <button x="125" y="5" 
            text="settings dialogue" onclick="settingview.open();" />        
</canvas>
